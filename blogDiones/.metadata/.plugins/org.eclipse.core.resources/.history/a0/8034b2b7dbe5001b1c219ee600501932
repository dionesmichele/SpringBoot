package com.generation.blogDiones.service;

import java.util.Optional;

import com.generation.blogDiones.model.Usuario;
import com.generation.blogDiones.model.UsuarioLogin;

@
public class UsuarioService {

	@Autowired
	private UsuarioRepository repository;

	public Usuario CadastrarUsuario(Usuario usuario) {
		BCryptPasswordEncoder encoder = new BCryptPasswordEncoder();

		String senhaEncoder = encoder.encode(usuario.getSenha());
		usuario.setSenha(senhaEncoder);

		return repository.save(usuario);

	}
	
	public Optional<UsuarioLogin> Logar(Optional<UsuarioLogin> usuario){
		BCryptPasswordEncoder encoder = new BCryptPasswordEncoder();
		Optional<Usuario> user = repository.findByUsuario(usuario.get().getUsuario());
			
		if(user.isPresent()) {
			if(encoder.matches(usuario.get().getSenha(), user.get().getSenha())) {
				String auth = usuario.get().getUsuario() + ":" + usuario.get().getSenha();
				byte[] encoderAuth = Base64.encodeBase64(auth.getBytes(Charset.forName("US-ASCII")));
				String authHeadert = "Basic" + new String(encoderAuth);
				
				usuario.get().setToken(authHeadert);
				usuario.get().setNome(user.get().getNome());
				
				return usuario;
			}
		}
		
		return null;
	}
